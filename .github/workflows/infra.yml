name: Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Terraform environment (dev, staging, prod)'
        required: true
        default: 'dev'

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: tf-src/envs/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::225989363866:role/github-actions-oidc-role
          aws-region: ${{ vars.AWS_REGION }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format
        run: terraform fmt -check

      - name: Write tfvars file for selected environment
        run: |
          if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            printf '%s' '${{ secrets.DEV_TFVARS }}' > dev.tfvars
          elif [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            printf '%s' '${{ secrets.PROD_TFVARS }}' > prod.tfvars
          fi
          ls -ltr

      - name: Terraform Plan
        run: terraform plan -var-file="${{ github.event.inputs.environment }}.tfvars"

      # - name: Terraform Apply
      #   if: github.event_name == 'workflow_dispatch'
      #   run: terraform apply -auto-approve -var-file="${{ github.event.inputs.environment }}.tfvars"