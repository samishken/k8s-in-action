name: Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Terraform environment (dev, staging, prod)'
        required: true
        default: 'dev'

# Required for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: tf-src/envs/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      
      # Authenticate with AWS using OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format
        run: terraform fmt -check

      - name: Write tfvars file for selected environment
        run: |
          if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            printf '%s' '${{ secrets.DEV_TFVARS }}' > dev.tfvars
          elif [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            printf '%s' '${{ secrets.PROD_TFVARS }}' > prod.tfvars
          fi
          ls -ltr

      - name: Terraform Plan
        env:
          GITHUB_ACTIONS_OIDC_ROLE_ARN: ${{ secrets.ACTIONS_OIDC_ROLE_ARN }}
        run: |
          terraform plan -var-file="${{ github.event.inputs.environment }}.tfvars" -var="github_actions_oidc_role_arn=$GITHUB_ACTIONS_OIDC_ROLE_ARN"

      - name: Terraform Apply
        env:
          GITHUB_ACTIONS_OIDC_ROLE_ARN: ${{ secrets.ACTIONS_OIDC_ROLE_ARN }}
        run: |
          terraform apply -var="github_actions_oidc_role_arn=$GITHUB_ACTIONS_OIDC_ROLE_ARN"