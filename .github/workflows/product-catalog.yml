# CI for Product Catalog Service

name: product-catalog-ci

on: 
    workflow_dispatch:
    # pull_request:
    #     branches:
    #     - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
            go-version: 1.22
        
        - name: Build
          run: |
            cd app/src/product-catalog
            go mod download
            go build -o product-catalog-service main.go

        - name: unit tests
          run: |
            cd app/src/product-catalog
            go app/test ./...
    
    code-quality:
        runs-on: ubuntu-latest

        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
           go-version: 1.22
        
        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.55.2
            run: golangci-lint run
            working-directory: app/src/product-catalog


    # docker-deploy:
    #     runs-on: ubuntu-latest
    #     needs: [build, code-quality] 
    #     env:
    #         ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}  
    #         ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    #         IMAGE_TAG: ${{ github.sha }}

    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v4

    #         - name: Configure AWS credentials
    #           uses: aws-actions/configure-aws-credentials@v4
    #           with:
    #             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #             aws-region: us-east-1

    #         - name: Login to Amazon ECR
    #           id: login-ecr
    #           uses: aws-actions/amazon-ecr-login@v2

    #         - name: Build Docker image
    #           working-directory: app/
    #           run: |
    #              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    #         - name: Push Docker image to ECR
    #           run: |
    #             docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    
    # updatek8s:
    #     runs-on: ubuntu-latest

    #     needs: docker

    #     steps:
    #     - name: checkout code
    #       uses: actions/checkout@v4
    #       with:
    #         token: ${{ secrets.GITHUB_TOKEN }}

    #     - name: Update tag in kubernetes deployment manifest
    #       run: | 
    #            sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{github.run_id}}|" kubernetes/productcatalog/deploy.yaml
        
    #     - name: Commit and push changes
    #       run: |
    #         git config --global user.email "samishken@gmail.com"
    #         git config --global user.name "samishken"
    #         git add kubernetes/productcatalog/deploy.yaml
    #         git commit -m "[CI]: Update product catalog image tag"
    #         git push origin HEAD:main -f

        
     