# CI for Product Catalog Service

name: product-catalog-ci

on: 
    workflow_dispatch:
    # pull_request:
    #     branches:
    #     - main
      inputs:
        environment:
          description: 'Terraform environment (dev, staging, prod)'
          required: true
          default: 'dev'

# Required for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
            go-version: 1.22
        
        - name: Build
          run: |
            cd app/src/product-catalog
            go mod download
            go build -o product-catalog-service main.go

        - name: unit tests
          run: |
            cd app/src/product-catalog
            go test ./...
    
    code-quality:
        runs-on: ubuntu-latest
        needs: [build] 

        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
           go-version: 1.22
        
        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          continue-on-error: true
          with:
            version: v1.55.2
            args: run ./app/src/product-catalog/...

    docker-deploy:
        runs-on: ubuntu-latest
        needs: [build, code-quality]
        outputs:
          repository: ${{ steps.set-repo.outputs.repository }}
          registry: ${{ steps.set-registry.outputs.registry }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          # Authenticate with AWS using OIDC
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
              aws-region: ${{ vars.AWS_REGION }}
          
          # Login to Amazon ECR
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Set repository name
            id: set-repo
            run: |
              if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
                echo "repository=${{ secrets.ECR_REPOSITORY_DEV }}" >> $GITHUB_OUTPUT
              elif [ "${{ github.event.inputs.environment }}" = "prod" ]; then
                echo "repository=${{ secrets.ECR_REPOSITORY_PROD }}" >> $GITHUB_OUTPUT
              else
                echo "repository=${{ secrets.ECR_REPOSITORY_STAGING }}" >> $GITHUB_OUTPUT
              fi

          - name: Set registry output
            id: set-registry
            run: echo "registry=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_OUTPUT

          - name: Build, tag, and push docker image to Amazon ECR
            working-directory: app/src/product-catalog
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              IMAGE_TAG: ${{ github.sha }}
              REPOSITORY: ${{ steps.set-repo.outputs.repository }}
            run: |
              docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
              docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG


    
    updatek8s:
        runs-on: ubuntu-latest
        needs: docker-deploy
        steps:
          - name: checkout code
            uses: actions/checkout@v4
            with:
              token: ${{ secrets.REPO_TOKEN }}

          - name: Update tag in kubernetes deployment manifest
            env:
              ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ${{ needs.docker-deploy.outputs.repository }}
              IMAGE_TAG: ${{ github.sha }}
            run: |
              sed -i "s|image: .*|image: $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG|" app/kubernetes/productcatalog/deploy.yaml
            
          ## `${GITHUB_REF_NAME}` is a [GitHub Actions default environment variable](https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables) 
          ## that contains the **branch or tag name** that triggered the workflow, **without the refs/heads/** or **refs/tags/** prefix.
          - name: Commit and push changes
            run: |
              git config --global user.email "samishken@gmail.com"
              git config --global user.name "samishken"
              git add app/kubernetes/productcatalog/deploy.yaml
              git commit -m "[CI]: Update product catalog image tag"
              git push origin HEAD:${GITHUB_REF_NAME} -f



